import { DocItemContext } from './site';
export type PropertyGetter = (ctx: DocItemContext, original?: unknown) => unknown;
export type Properties = Record<string, PropertyGetter>;
export interface Templates {
    partials?: Record<string, () => string>;
    helpers?: Record<string, (...args: unknown[]) => string>;
    properties?: Record<string, PropertyGetter>;
}
/**
 * Loads the templates that will be used for rendering a site based on a
 * default theme and user templates.
 *
 * The result contains all partials, helpers, and property getters defined in
 * the user templates and the default theme, where the user's take precedence
 * if there is a clash. Additionally, all theme partials and helpers are
 * included with the theme prefix, e.g. `markdown/contract` will be a partial.
 */
export declare function loadTemplates(defaultTheme: string, root: string, userTemplatesPath?: string): Promise<Templates>;
/**
 * Read templates and helpers from a directory.
 */
export declare function readTemplates(partialsDir: string, helpersDir?: string): Promise<Required<Templates>>;
//# sourceMappingURL=templates.d.ts.map